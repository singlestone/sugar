name: 🔄 CI

on:
  push:
    branches:
      - main
  pull_request: {}

permissions:
  actions: write
  contents: write

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# Define jobs within the workflow
jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: 📥 Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"

      - name: 📥 Install via pnpm
        run: pnpm install
        shell: bash

      - name: 🔬 Lint
        run: pnpm run lint

  test:
    name: ⚡ Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: 📥 Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"

      - name: 📥 Install via pnpm
        run: pnpm install
        shell: bash

      - name: ⚡ Run tests
        run: pnpm run test:ci

  build:
    name: 🔨 Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: 📥 Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"

      - name: 📥 Install via pnpm
        run: pnpm install
        shell: bash

      - name: 🏠 Run build
        run: pnpm run build

  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
          # Disable saving GitHub auth token in git config
          persist-credentials: false

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v2.2.4

      - name: 📥 Use Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"

      - name: 📥 Install via pnpm
        run: pnpm install
        shell: bash

      - name: 🚀 Release via Changesets
        id: changesets
        uses: changesets/action@v1
        with:
          version: bash ./update-lock.sh
          publish: pnpm release
          commit: "chore: version packages"
          title: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: 📧 Send a Slack notification if a publish happens
        uses: ToppleTheNun/changesets-publish-slack-action@v1
        if: steps.changesets.outputs.published == 'true'
        with:
          publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
          slackWebhook: ${{ secrets.SLACK_WEBHOOK }}
